"""fix missing models

Revision ID: e0b96dd6c489
Revises: a77a9d5f6e34
Create Date: 2025-04-30 16:19:48.571159

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e0b96dd6c489'
down_revision: Union[str, None] = 'a77a9d5f6e34'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_user_id', table_name='user')
    op.drop_table('user')
    op.add_column('item', sa.Column('parent_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_item_parent_id'), 'item', ['parent_id'], unique=False)
    op.create_foreign_key(None, 'item', 'item', ['parent_id'], ['id'], ondelete='CASCADE')
    op.drop_column('item', 'deleted_at')
    op.drop_column('project', 'deleted_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('project', sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'item', type_='foreignkey')
    op.drop_index(op.f('ix_item_parent_id'), table_name='item')
    op.drop_column('item', 'parent_id')
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key')
    )
    op.create_index('ix_user_id', 'user', ['id'], unique=False)
    # ### end Alembic commands ###
