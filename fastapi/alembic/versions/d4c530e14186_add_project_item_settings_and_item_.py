"""add project, item settings and item models

Revision ID: d4c530e14186
Revises: 12b8b707e03f
Create Date: 2025-04-30 10:52:13.279045

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "d4c530e14186"
down_revision: Union[str, None] = "12b8b707e03f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "project",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_project_id"), "project", ["id"], unique=False)
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("username", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=False)
    op.create_table(
        "item_location",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "name", "project_id", name="_item_location_uc_name_project"
        ),
    )
    op.create_index(op.f("ix_item_location_id"), "item_location", ["id"], unique=False)
    op.create_index(
        op.f("ix_item_location_project_id"),
        "item_location",
        ["project_id"],
        unique=False,
    )
    op.create_table(
        "item_status",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "project_id", name="_item_status_uc_name_project"),
    )
    op.create_index(op.f("ix_item_status_id"), "item_status", ["id"], unique=False)
    op.create_index(
        op.f("ix_item_status_project_id"), "item_status", ["project_id"], unique=False
    )
    op.create_table(
        "item_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.Column("self_nestable", sa.Boolean(), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "project_id", name="_item_type_uc_name_project"),
        sa.UniqueConstraint("order", "project_id", name="_item_type_uc_order_project"),
    )
    op.create_index(op.f("ix_item_type_id"), "item_type", ["id"], unique=False)
    op.create_index(
        op.f("ix_item_type_project_id"), "item_type", ["project_id"], unique=False
    )
    op.create_table(
        "item",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("item_status_id", sa.Integer(), nullable=True),
        sa.Column("item_location_id", sa.Integer(), nullable=True),
        sa.Column("item_type_id", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["item_location_id"], ["item_location.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["item_status_id"], ["item_status.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["item_type_id"], ["item_type.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_item_id"), "item", ["id"], unique=False)
    op.create_index(
        op.f("ix_item_item_location_id"), "item", ["item_location_id"], unique=False
    )
    op.create_index(
        op.f("ix_item_item_status_id"), "item", ["item_status_id"], unique=False
    )
    op.create_index(
        op.f("ix_item_item_type_id"), "item", ["item_type_id"], unique=False
    )
    op.create_index(op.f("ix_item_project_id"), "item", ["project_id"], unique=False)
    op.drop_index("ix_users_email", table_name="users")
    op.drop_index("ix_users_id", table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("username", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="users_pkey"),
    )
    op.create_index("ix_users_id", "users", ["id"], unique=False)
    op.create_index("ix_users_email", "users", ["email"], unique=True)
    op.drop_index(op.f("ix_item_project_id"), table_name="item")
    op.drop_index(op.f("ix_item_item_type_id"), table_name="item")
    op.drop_index(op.f("ix_item_item_status_id"), table_name="item")
    op.drop_index(op.f("ix_item_item_location_id"), table_name="item")
    op.drop_index(op.f("ix_item_id"), table_name="item")
    op.drop_table("item")
    op.drop_index(op.f("ix_item_type_project_id"), table_name="item_type")
    op.drop_index(op.f("ix_item_type_id"), table_name="item_type")
    op.drop_table("item_type")
    op.drop_index(op.f("ix_item_status_project_id"), table_name="item_status")
    op.drop_index(op.f("ix_item_status_id"), table_name="item_status")
    op.drop_table("item_status")
    op.drop_index(op.f("ix_item_location_project_id"), table_name="item_location")
    op.drop_index(op.f("ix_item_location_id"), table_name="item_location")
    op.drop_table("item_location")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_project_id"), table_name="project")
    op.drop_table("project")
    # ### end Alembic commands ###
